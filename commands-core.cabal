name:    commands-core
version: 0.0.0
--       | | +----- no API change
--       | +------- non-breaking API change (i.e. additions)
--       +--------- breaking API change (i.e. deletions/modifications)
-- http://semver.org/

-- a short description, shows up in the search result from hackage
synopsis: control your computer by voice, with "grammar combinators"
category: Voice Control, Speech Recognition, Parsing, Natural Language Processing

description:
 Define @Grammar@s declaratively/modularly with combinators, which simultaneously induce @Parser@s and (for serialization) @Recognizer@s.
 .
 @parse@ natural language commands with a @Grammar@, @compile@ the @data@ into @Action@s, and @execute@ those @Action@s on your computer.
 .
 The <http://hackage.haskell.org/package/commands commands> package comes with "batteries included".

author:     Spiros Boosalis
maintainer: samboosalis@gmail.com

homepage:    https://github.com/sboosali/commands-core#readme
bug-reports: https://github.com/sboosali/commands-core/issues

copyright:    Copyright (C) 2015 Spiros M. Boosalis
license:      GPL-3
license-file: LICENSE

build-type:  Simple
stability:   experimental
tested-with: GHC == 7.8.3

-- extra files to be distributed with the package
extra-source-files:
 README.md

-- extra files to be distributed with the package
-- access with:
--  getDataFileName :: FilePath -> IO FilePath
--  file <- getDataFileName "data/file.txt"
--  data <- readFile file
data-files:

-- constraint on the version of Cabal needed to build this package
cabal-version:       >=1.10


source-repository head
 type:     git
 location: https://github.com/sboosali/commands-core


library

 -- directories with source files
 hs-source-dirs: sources

 -- modules exported by the library
 exposed-modules:
  Commands.Core

  Commands.Etc
  Commands.Instances

  Commands.Grammar
  Commands.Grammar.Types

  Commands.Parse
  Commands.Parse.Types
  Commands.Parsec

  Commands.Frontends.Dragon13
  Commands.Frontends.Dragon13.Types
  Commands.Frontends.Dragon13.Lens
  Commands.Frontends.Dragon13.Text
  Commands.Frontends.Dragon13.Render
  Commands.Frontends.Dragon13.Optimize
  Commands.Frontends.Dragon13.Shim
  Commands.Frontends.Dragon13.Serialize

  Commands.Command
  Commands.Command.Types
  Commands.Command.Sugar
  Commands.Command.Combinator

  Commands.Munging

  Commands.Plugins.Example

  Commands.Graph
  Control.Alternative.Free.Tree

 -- modules included in this library, but not exported
 other-modules:

 -- other library packages from which modules are imported
 build-depends:

    base                      ==4.7.*
  , containers                ==0.5.*
  , transformers              ==0.3.*
  , transformers-compat       ==0.4.*
  , mtl                       ==2.1.*
  , template-haskell          ==2.9.*

  , exceptions                ==0.6.*
  , lens                      ==4.8.*
  , bifunctors                ==4.2.*
  , parsec                    ==3.1.*
  , split                     ==0.2.*
  , either                    ==4.3.*
  , semigroups                ==0.16.*
  , text                      ==1.2.*
  , wl-pprint-text            ==1.1.*
  , language-python           ==0.4.*
  , async                     ==2.0.*
  , parallel                  ==3.2.*
  , action-permutations       ==0.0.*
  , hashable                  ==1.2.*
  , data-default-generics     ==0.3.*
  , nats
  , reducers                  ==3.10.*
  , formatting                ==6.2.*
  , interpolatedstring-perl6  ==0.9.*
  , free  ==4.11.*

--               , aeson-pretty  ==0.7.*,
-- use wl-pprint-text directly
--               , transformers  ==0.3.*
-- do not use: different transformers versions breaks doctest

 -- base language which the package is written in
 default-language: Haskell2010

 ghc-options:
  -Wall
  -fno-warn-name-shadowing


test-suite tests
 main-is:        Tests.hs
 hs-source-dirs: tests
 other-modules:
  Commands.Test.Etc
  Commands.Test.Types
  Commands.Test.Arbitrary
  Commands.Test.Properties

 -- cabal will say the tests pass only if `main-is` exits with zero
 type: exitcode-stdio-1.0

 default-language: Haskell2010
 ghc-options:
  -threaded

 build-depends:
    commands-core

  , base       ==4.7.*
  , text ==1.2.*
  , semigroups ==0.16.*
  , bifunctors    ==4.2.*

  , QuickCheck ==2.7.*
  , doctest    ==0.9.*
  , tasty   ==0.10.*
  , tasty-quickcheck ==0.8.*



executable example
 main-is:        Example.hs
 hs-source-dirs: executables

 default-language: Haskell2010
 ghc-options:
  -Wall
  -fno-warn-name-shadowing
  -threaded
  -O2
  "-with-rtsopts=-N"

 build-depends:
  commands-core,
  base ==4.7.*



-- sources/Commands/Parsec.hs:34:49:
--     Couldn't match type ‘Identity’
--                   with ‘transformers-0.3.0.0:Data.Functor.Identity.Identity’
--     NB: ‘Identity’
--           is defined in ‘Data.Functor.Identity’
--               in package ‘transformers-0.4.2.0’
--         ‘transformers-0.3.0.0:Data.Functor.Identity.Identity’
--           is defined in ‘Data.Functor.Identity’
--               in package ‘transformers-0.3.0.0’
--     Expected type: Parsec.Parsec String () a
--       Actual type: Parsec a
--     In the first argument of ‘Parsec.parse’, namely ‘p’
--     In the second argument of ‘($)’, namely ‘Parsec.parse p s s’


-- http://haskell.org/cabal/users-guide/

-- $ cabal sandbox init
-- $ time cabal install --only-dependencies --enable-tests
-- $ cabal build

-- $ cabal repl
-- # loads modules in `exposed-modules` under `library` (into ghci)
-- Commands>

-- $ cabal install --enable-tests
-- $ cabal configure --enable-tests
-- $ cabal build && cabal test
-- # runs tests in the `main` function in the file in `main-is` under `test-suite`

-- $ cabal haddock && open dist/doc/html/commands-core/index.html
-- # .cabal-sandbox/share/doc/$COMPILER/$PACKAGE-VERSION/html/$MODULE

-- # find dist/build/
-- # rm -fr dist/
